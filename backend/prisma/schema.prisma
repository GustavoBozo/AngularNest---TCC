// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// Modelo de Usuário
model User {
  id        String    @id @default(uuid())
  name      String
  email     String    @unique
  password  String
  
  
  documents Document[]
  
  
  teamMemberships TeamMembership[]
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


model Document {
  id          String   @id @default(uuid())
  
  
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  
  filename    String
  filepath    String
  
  
  documentMetadata DocumentMetadata[]
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}


model Metadados {
  id          String   @id @default(uuid())
  
  description String?
  
  
  documentMetadata DocumentMetadata[]
  
  
}


model DocumentMetadata {
  document   Document @relation(fields: [documentId], references: [id])
  documentId String
  
  metadados   Metadados @relation(fields: [metadataId], references: [id])
  metadataId String
  
 
  
  @@id([documentId, metadataId])
}

// Modelo de Equipe
model Team {
  id          String   @id @default(uuid())
  name        String
  
  // Relação muitos para muitos com usuários
  members     TeamMembership[]
  
 
}


model TeamMembership {
  user     User   @relation(fields: [userId], references: [id])
  userId   String
  
  team     Team   @relation(fields: [teamId], references: [id])
  teamId   String
  
  
  
  @@id([userId, teamId])
}